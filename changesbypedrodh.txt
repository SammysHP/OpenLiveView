diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 41685ff..0a9a0ff 100755
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -1,12 +1,16 @@
 <?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+<manifest 
+    xmlns:android="http://schemas.android.com/apk/res/android"
     package="net.sourcewalker.olv"
     android:versionCode="1"
-    android:versionName="alpha RN+ edit" >
-
-    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
-    <uses-permission android:name="android.permission.VIBRATE" />
-
+    android:versionName="alpha RN+ edit">
+    
+    <uses-permission android:name="android.permission.GET_ACCOUNTS"/>
+    <uses-permission android:name="android.permission.VIBRATE"/>
+    <uses-permission android:name="android.permission.BLUETOOTH"/>
+    <uses-permission android:name="android.permission.READ_CONTACTS"/>
+	<uses-permission android:name="android.permission.RECEIVE_SMS"/>
+	<uses-permission android:name="android.permission.READ_SMS"/>
     <application
         android:icon="@drawable/icon"
         android:label="@string/app_name" >
@@ -47,9 +51,6 @@
             android:label="@string/title_activity_hack" >
         </activity>
     </application>
-
     <uses-sdk android:minSdkVersion="8" />
 
-    <uses-permission android:name="android.permission.BLUETOOTH" />
-
-</manifest>
\ No newline at end of file
+</manifest>
diff --git a/project.properties b/project.properties
index 9b84a6b..b7c2081 100755
--- a/project.properties
+++ b/project.properties
@@ -11,4 +11,4 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-16
+target=android-10
diff --git a/src/net/sourcewalker/olv/content/ContentNotification.java b/src/net/sourcewalker/olv/content/ContentNotification.java
new file mode 100644
index 0000000..9e6fe9c
--- /dev/null
+++ b/src/net/sourcewalker/olv/content/ContentNotification.java
@@ -0,0 +1,41 @@
+package net.sourcewalker.olv.content;
+
+public class ContentNotification {
+	private String title;
+	private String content;
+	private long timestamp;
+	
+	public ContentNotification() {
+		super();
+	}
+	
+	
+	public ContentNotification(String title, String content, long timestamp) {
+		super();
+		this.title = title;
+		this.content = content;
+		this.timestamp = timestamp;
+	}
+
+
+	public String getTitle() {
+		return title;
+	}
+	public void setTitle(String title) {
+		this.title = title;
+	}
+	public String getContent() {
+		return content;
+	}
+	public void setContent(String content) {
+		this.content = content;
+	}
+	public long getTimestamp() {
+		return timestamp;
+	}
+	public void setTimestamp(long timestamp) {
+		this.timestamp = timestamp;
+	}
+	
+	
+}
diff --git a/src/net/sourcewalker/olv/content/manager/SMSNotificationManager.java b/src/net/sourcewalker/olv/content/manager/SMSNotificationManager.java
new file mode 100644
index 0000000..8b0b3ab
--- /dev/null
+++ b/src/net/sourcewalker/olv/content/manager/SMSNotificationManager.java
@@ -0,0 +1,72 @@
+package net.sourcewalker.olv.content.manager;
+
+import net.sourcewalker.olv.content.ContentNotification;
+import android.content.Context;
+import android.content.Intent;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.ContactsContract;
+import android.provider.ContactsContract.PhoneLookup;
+import android.telephony.SmsMessage;
+import android.text.GetChars;
+import android.widget.Toast;
+
+public class SMSNotificationManager {
+
+	public static ContentNotification getNotificationContent(Context context,
+			Intent intent) {
+		ContentNotification result = new ContentNotification();
+
+		Bundle bundle = intent.getExtras();
+		if (bundle != null) {
+			Object[] pdus = (Object[]) bundle.get("pdus");
+
+			final SmsMessage[] messages = new SmsMessage[pdus.length];
+			for (int i = 0; i < pdus.length; i++) {
+				messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
+			}
+			if (messages.length > -1) {
+				final String messageBody = messages[0].getMessageBody();
+
+				result.setContent(messageBody);
+				result.setTitle("SMS " + getContactByAddr(context, messages[0]));
+				result.setTimestamp(messages[0].getTimestampMillis());
+			}
+		}
+
+		return result;
+	}
+
+	/**
+	 * Return the contact name based on the phone number.
+	 * 
+	 * @see http://stackoverflow.com/questions/4467232/how-to-get-the-contact-infomation-by-sms-message
+	 * @param context
+	 * @param sms SmsMessage used to find the contact name
+	 * @return Contact name otherwise the phone number
+	 */
+	private static String getContactByAddr(Context context, final SmsMessage sms) {
+		Uri personUri = null;
+		Cursor cur = null;
+
+		try {
+			personUri = Uri.withAppendedPath(
+					ContactsContract.PhoneLookup.CONTENT_FILTER_URI,
+					sms.getDisplayOriginatingAddress());
+			cur = context.getContentResolver()
+					.query(personUri,
+							new String[] { PhoneLookup.DISPLAY_NAME }, null,
+							null, null);
+			if (cur.moveToFirst()) {
+				int nameIdx = cur.getColumnIndex(PhoneLookup.DISPLAY_NAME);
+				return cur.getString(nameIdx);
+			}
+			return sms.getDisplayOriginatingAddress();
+		} finally {
+			if (cur != null) {
+				cur.close();
+			}
+		}
+	}
+}
diff --git a/src/net/sourcewalker/olv/service/GetNotificationService.java b/src/net/sourcewalker/olv/service/GetNotificationService.java
index 7a75b1d..e829b1e 100755
--- a/src/net/sourcewalker/olv/service/GetNotificationService.java
+++ b/src/net/sourcewalker/olv/service/GetNotificationService.java
@@ -21,7 +21,6 @@ public class GetNotificationService extends AccessibilityService {
 
 	private static final String LOG_TAG = "OLV Notification service";
 	final public static String SHOW_NOTIFICATION = "SHOW_NOTIFICATION";
-	int time;
 	
 	//private LiveViewService parentService;
 	
@@ -69,10 +68,11 @@ public class GetNotificationService extends AccessibilityService {
 	                	Bundle bcb = new Bundle();
 	                	bcb.putString("contents", notificationList.get(i).toString());
 	                	bcb.putString("title", "Notification");
-	                	time = (int) (Calendar.getInstance().getTimeInMillis() / 1000);
-	                    time += Calendar.getInstance().get(Calendar.ZONE_OFFSET)/1000;
-	                    time += Calendar.getInstance().get(Calendar.DST_OFFSET) / 1000;
-	                	bcb.putInt("timestamp", time);
+	                	long time = System.currentTimeMillis();
+//	                	time = (int) (Calendar.getInstance().getTimeInMillis() / 1000);
+//	                    time += Calendar.getInstance().get(Calendar.ZONE_OFFSET)/1000;
+//	                    time += Calendar.getInstance().get(Calendar.DST_OFFSET) / 1000;
+	                	bcb.putLong("timestamp", time);
 	                	bci.putExtras(bcb);
 	                	sendBroadcast(bci);  
 	                	Log.w(LOG_TAG, "The notification was sent to the lvservice.");
diff --git a/src/net/sourcewalker/olv/service/LiveViewService.java b/src/net/sourcewalker/olv/service/LiveViewService.java
index 92e6046..ea30f4a 100755
--- a/src/net/sourcewalker/olv/service/LiveViewService.java
+++ b/src/net/sourcewalker/olv/service/LiveViewService.java
@@ -1,13 +1,18 @@
 package net.sourcewalker.olv.service;
 
+import net.sourcewalker.olv.content.ContentNotification;
+import net.sourcewalker.olv.content.manager.SMSNotificationManager;
 import net.sourcewalker.olv.messages.calls.SetVibrate;
 import android.app.Service;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.os.Bundle;
 import android.os.IBinder;
+import android.telephony.SmsMessage;
 import android.util.Log;
+import android.widget.Toast;
 
 /**
  * This service hosts and controls the thread communicating with the LiveView
@@ -17,6 +22,7 @@ import android.util.Log;
  */
 public class LiveViewService extends Service {
 
+	 public final String	ACTION_RECEIVE_SMS	= "android.provider.Telephony.SMS_RECEIVED";
     public static final String ACTION_START = "start";
     public static final String ACTION_STOP = "stop";
     
@@ -28,7 +34,7 @@ public class LiveViewService extends Service {
     byte NotificationTotalCount      = 0;
     String [] NotificationTitle     = new String [101];
     String [] NotificationContent   = new String [101];
-    int [] NotificationTime         = new int [101];
+    long [] NotificationTime         = new long [101];
     Boolean NotificationNeedsUpdate = true;
     
     BroadcastReceiver notification_receiver = new ShowNotificationReceiver();
@@ -51,6 +57,9 @@ public class LiveViewService extends Service {
     		NotificationTitle[100-cid] = "Empty";
     	}
     	registerReceiver(notification_receiver,  new IntentFilter(SHOW_NOTIFICATION));
+//    	IntentFilter intentFilter = new IntentFilter(android.Manifest.permission.RECEIVE_SMS);
+    	IntentFilter intentFilter = new IntentFilter(ACTION_RECEIVE_SMS);
+		registerReceiver(notification_receiver,  intentFilter);
     }
     
     @Override
@@ -120,7 +129,7 @@ public class LiveViewService extends Service {
         this.NotificationTitle[id] = NotificationTitleVal;
     } 
     
-    public int getNotificationTime(int id) {
+    public long getNotificationTime(int id) {
         return NotificationTime[id];
     }
 
@@ -154,6 +163,7 @@ public class LiveViewService extends Service {
     
     public class ShowNotificationReceiver extends BroadcastReceiver  
     {  
+
         @Override  
         public void onReceive(Context context, Intent intent)  
         {  
@@ -169,11 +179,19 @@ public class LiveViewService extends Service {
         	{
         		NotificationTotalCount += 1;
         	}
-        	NotificationContent[0] = intent.getExtras().getString("contents"); // + (char)10
-        	NotificationTitle[0] = intent.getExtras().getString("title");
-        	NotificationTime[0] = intent.getExtras().getInt("timestamp");
+
+        	if (intent.getAction().equals(ACTION_RECEIVE_SMS)) {
+				ContentNotification notification = SMSNotificationManager.getNotificationContent(context, intent);
+				NotificationContent[0] = notification.getContent();
+	        	NotificationTitle[0] = notification.getTitle();
+	        	NotificationTime[0]=notification.getTimestamp();
+			} else if (intent.getAction().equals(SHOW_NOTIFICATION)) {
+	        	NotificationContent[0] = intent.getExtras().getString("contents"); // + (char)10
+	        	NotificationTitle[0] = intent.getExtras().getString("title");
+	        	NotificationTime[0] = intent.getExtras().getLong("timestamp");
+			}
         	Log.w("ShowNotificationReceiver", "Added new notification");
-        }  
+        }
     }    
 /*
     Intent i = new Intent(passing.this, received.class);
diff --git a/src/net/sourcewalker/olv/service/LiveViewThread.java b/src/net/sourcewalker/olv/service/LiveViewThread.java
index 9626b78..39f369a 100755
--- a/src/net/sourcewalker/olv/service/LiveViewThread.java
+++ b/src/net/sourcewalker/olv/service/LiveViewThread.java
@@ -8,7 +8,10 @@ package net.sourcewalker.olv.service;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.util.Calendar;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Locale;
 import java.util.UUID;
 
 import net.sourcewalker.olv.LiveViewPreferences;
@@ -20,7 +23,6 @@ import net.sourcewalker.olv.messages.LiveViewEvent;
 import net.sourcewalker.olv.messages.MessageConstants;
 import net.sourcewalker.olv.messages.UShort;
 import net.sourcewalker.olv.messages.calls.CapsRequest;
-import net.sourcewalker.olv.messages.calls.ClearDisplay;
 import net.sourcewalker.olv.messages.calls.DeviceStatusAck;
 import net.sourcewalker.olv.messages.calls.DisplayBitmap;
 import net.sourcewalker.olv.messages.calls.DisplayText;
@@ -53,6 +55,12 @@ import android.util.Log;
 import android.view.KeyEvent;
 
 public class LiveViewThread extends Thread {
+	
+	private ThreadLocal<DateFormat> sdf = new ThreadLocal<DateFormat>() {
+		protected DateFormat initialValue() {
+			return SimpleDateFormat.getDateTimeInstance(SimpleDateFormat.SHORT, SimpleDateFormat.SHORT, Locale.getDefault());
+		};
+	};
 
     private static final String TAG = "LiveViewThread";
     private static final UUID SERIAL = UUID
@@ -123,9 +131,10 @@ public class LiveViewThread extends Thread {
         menuImage_min = loadImageByteArray(parentService, "menu_min.png");
         menuImage_media_isplaying = loadImageByteArray(parentService, "jerry_music_play_icn.png");
         menuImage_media_isnotplaying = loadImageByteArray(parentService, "jerry_music_pause_icn.png");
+ 
         menu_state = 0;
     }
-    
+
     /**
      * This function was added by 149
      * Return byte array for the supplied image file
@@ -338,16 +347,9 @@ public class LiveViewThread extends Thread {
             if (last_menu_id==0) //Notifications
             {
             	Log.d(TAG, "Notifications alert (ID: "+alertId+") Time:"+parentService.getNotificationTime(alertId));         	
-                final Calendar cal = Calendar.getInstance();
-                cal.setTimeInMillis(parentService.getNotificationTime(alertId)*1000);
-                long notificationYear =  cal.get(Calendar.YEAR);
-                long notificationMonth = cal.get(Calendar.MONTH);
-                long notificationDay = cal.get(Calendar.DAY_OF_MONTH);
-                long notificationHour = cal.get(Calendar.HOUR);
-                long notificationMinute  = cal.get(Calendar.MINUTE);
-                String notificationTimeString = String.format("%d:%d %d-%d-%d", notificationHour,
-                        notificationMinute, notificationDay, notificationMonth, notificationYear );
-            	if (parentService.getNotificationTotalCount() > 0)
+                String notificationTimeString = sdf.get().format(new Date(parentService.getNotificationTime(alertId)));
+
+                if (parentService.getNotificationTotalCount() > 0)
             	{
             		sendCall(new GetAlertResponse((byte) parentService.getNotificationTotalCount(), (byte) parentService.getNotificationUnreadCount(), alertId, (String) notificationTimeString, (String) parentService.getNotificationTitle(alertId), (String) parentService.getNotificationContent(alertId), menuImage_notification));            	
             	}
